shared B0, B1, B2, B3, B4, B5, B6, B7, B8, B9, B10, B11, B12, B13, B14;

local T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14;

init

	
	/* Initializing local variables */
	324: store B0 = *;
	323: store B1 = *;
	322: store B2 = *;
	321: store B3 = *;
	320: store B4 = *;
	319: store B5 = *;
	318: store B6 = *;
	317: store B7 = *;
	316: store B8 = *;
	315: store B9 = *;
	314: store B10 = *;
	313: store B11 = *;
	312: store B12 = *;
	311: store B13 = *;
	310: store B14 = *;
	309: load T0 = B0;
	308: load T1 = B1;
	307: load T2 = B2;
	306: load T3 = B3;
	305: load T4 = B4;
	304: load T5 = B5;
	303: load T6 = B6;
	302: load T7 = B7;
	301: load T8 = B8;
	300: load T9 = B9;
	299: load T10 = B10;
	298: load T11 = B11;
	297: load T12 = B12;
	296: load T13 = B13;
	295: load T14 = B14;
	
	/* Predicate abstraction: store y1 = 0; */
	3: nop;
	9: begin_atomic;
	10: load T0 = B0;
	11: load T1 = B1;
	12: load T2 = B2;
	13: load T3 = B3;
	14: load T4 = B4;
	15: load T5 = B5;
	16: load T6 = B6;
	17: load T8 = B8;
	18: load T9 = B9;
	19: load T10 = B10;
	4: store B0 = choose(true, false);
	5: store B1 = choose(false, true);
	6: store B6 = choose(false, ((T0 == 0) && (T1 != 0)) || (((T0 == 0) && (T6 != 0)) || (((T1 != 0) && (T6 != 0)) || (((T3 == 0) && (T4 != 0)) || (((T0 != 0) && ((T1 == 0) && (T6 == 0))) || (((T0 != 0) && ((T2 == 0) && (T9 != 0))) || (((T0 != 0) && ((T3 == 0) && (T10 != 0))) || (((T0 != 0) && ((T4 == 0) && (T10 != 0))) || (((T0 == 0) && ((T2 != 0) && (T9 != 0))) || (((T0 == 0) && ((T3 != 0) && (T10 == 0))) || (((T0 == 0) && ((T4 != 0) && (T10 == 0))) || (((T1 != 0) && ((T2 == 0) && (T9 != 0))) || (((T1 != 0) && ((T3 == 0) && (T10 != 0))) || (((T1 != 0) && ((T4 == 0) && (T10 != 0))) || (((T1 == 0) && ((T4 != 0) && (T10 == 0))) || (((T2 == 0) && ((T6 != 0) && (T9 != 0))) || (((T3 != 0) && ((T5 == 0) && (T8 != 0))) || (((T3 == 0) && ((T5 != 0) && (T8 != 0))) || (((T3 == 0) && ((T6 != 0) && (T10 != 0))) || (((T4 != 0) && ((T5 == 0) && (T8 != 0))) || (((T4 != 0) && ((T6 != 0) && (T10 == 0))) || ((T4 == 0) && ((T6 != 0) && (T10 != 0))))))))))))))))))))))));
	7: store B9 = choose(false, false);
	8: store B10 = choose(false, false);
	20: T0 = 0;
	21: T1 = 0;
	22: T2 = 0;
	23: T3 = 0;
	24: T4 = 0;
	25: T5 = 0;
	26: T6 = 0;
	27: T8 = 0;
	28: T9 = 0;
	29: T10 = 0;
	30: assume(!(((B0 == 0) && (B1 != 0)) || (((B3 == 0) && (B4 != 0)) || (((B0 != 0) && ((B2 == 0) && (B9 != 0))) || (((B0 != 0) && ((B3 == 0) && (B10 != 0))) || (((B0 != 0) && ((B4 == 0) && (B10 != 0))) || (((B0 == 0) && ((B2 != 0) && (B9 != 0))) || (((B0 == 0) && ((B3 != 0) && (B10 == 0))) || (((B0 == 0) && ((B4 != 0) && (B10 == 0))) || (((B1 != 0) && ((B2 == 0) && (B9 != 0))) || (((B1 != 0) && ((B3 == 0) && (B10 != 0))) || (((B1 != 0) && ((B4 == 0) && (B10 != 0))) || (((B1 == 0) && ((B4 != 0) && (B10 == 0))) || (((B3 != 0) && ((B5 == 0) && (B8 != 0))) || (((B3 == 0) && ((B5 != 0) && (B8 != 0))) || ((B4 != 0) && ((B5 == 0) && (B8 != 0))))))))))))))))));
	31: end_atomic;
	
	/* Predicate abstraction: store y2 = 0; */
	32: nop;
	38: begin_atomic;
	33: store B3 = choose(true, false);
	34: store B4 = choose(false, true);
	35: store B7 = choose(false, false);
	36: store B8 = choose(false, false);
	37: store B10 = choose(false, false);
	39: assume(!(((B0 == 0) && (B1 != 0)) || (((B3 == 0) && (B4 != 0)) || (((B0 != 0) && ((B2 == 0) && (B9 != 0))) || (((B0 != 0) && ((B3 == 0) && (B10 != 0))) || (((B0 != 0) && ((B4 == 0) && (B10 != 0))) || (((B0 == 0) && ((B2 != 0) && (B9 != 0))) || (((B0 == 0) && ((B3 != 0) && (B10 == 0))) || (((B0 == 0) && ((B4 != 0) && (B10 == 0))) || (((B1 != 0) && ((B2 == 0) && (B9 != 0))) || (((B1 != 0) && ((B3 == 0) && (B10 != 0))) || (((B1 != 0) && ((B4 == 0) && (B10 != 0))) || (((B1 == 0) && ((B4 != 0) && (B10 == 0))) || (((B3 != 0) && ((B5 == 0) && (B8 != 0))) || (((B3 == 0) && ((B5 != 0) && (B8 != 0))) || ((B4 != 0) && ((B5 == 0) && (B8 != 0))))))))))))))))));
	40: end_atomic;
	
	/* Predicate abstraction: store ch1 = 0; */
	41: nop;
	43: begin_atomic;
	42: store B11 = choose(true, false);
	44: assume(!(((B0 == 0) && (B1 != 0)) || (((B3 == 0) && (B4 != 0)) || (((B0 != 0) && ((B2 == 0) && (B9 != 0))) || (((B0 != 0) && ((B3 == 0) && (B10 != 0))) || (((B0 != 0) && ((B4 == 0) && (B10 != 0))) || (((B0 == 0) && ((B2 != 0) && (B9 != 0))) || (((B0 == 0) && ((B3 != 0) && (B10 == 0))) || (((B0 == 0) && ((B4 != 0) && (B10 == 0))) || (((B1 != 0) && ((B2 == 0) && (B9 != 0))) || (((B1 != 0) && ((B3 == 0) && (B10 != 0))) || (((B1 != 0) && ((B4 == 0) && (B10 != 0))) || (((B1 == 0) && ((B4 != 0) && (B10 == 0))) || (((B3 != 0) && ((B5 == 0) && (B8 != 0))) || (((B3 == 0) && ((B5 != 0) && (B8 != 0))) || ((B4 != 0) && ((B5 == 0) && (B8 != 0))))))))))))))))));
	45: end_atomic;
	
	/* Predicate abstraction: store ch2 = 0; */
	46: nop;
	48: begin_atomic;
	47: store B12 = choose(true, false);
	49: assume(!(((B0 == 0) && (B1 != 0)) || (((B3 == 0) && (B4 != 0)) || (((B0 != 0) && ((B2 == 0) && (B9 != 0))) || (((B0 != 0) && ((B3 == 0) && (B10 != 0))) || (((B0 != 0) && ((B4 == 0) && (B10 != 0))) || (((B0 == 0) && ((B2 != 0) && (B9 != 0))) || (((B0 == 0) && ((B3 != 0) && (B10 == 0))) || (((B0 == 0) && ((B4 != 0) && (B10 == 0))) || (((B1 != 0) && ((B2 == 0) && (B9 != 0))) || (((B1 != 0) && ((B3 == 0) && (B10 != 0))) || (((B1 != 0) && ((B4 == 0) && (B10 != 0))) || (((B1 == 0) && ((B4 != 0) && (B10 == 0))) || (((B3 != 0) && ((B5 == 0) && (B8 != 0))) || (((B3 == 0) && ((B5 != 0) && (B8 != 0))) || ((B4 != 0) && ((B5 == 0) && (B8 != 0))))))))))))))))));
	50: end_atomic;
	
	/* Resetting local variables */
	325: T0 = 0;
	326: T1 = 0;
	327: T2 = 0;
	328: T3 = 0;
	329: T4 = 0;
	330: T5 = 0;
	331: T6 = 0;
	332: T7 = 0;
	333: T8 = 0;
	334: T9 = 0;
	335: T10 = 0;
	336: T11 = 0;
	337: T12 = 0;
	338: T13 = 0;
	339: T14 = 0;
	340: assume(!(((B0 == 0) && (B1 != 0)) || (((B3 == 0) && (B4 != 0)) || (((B0 != 0) && ((B2 == 0) && (B9 != 0))) || (((B0 != 0) && ((B3 == 0) && (B10 != 0))) || (((B0 != 0) && ((B4 == 0) && (B10 != 0))) || (((B0 == 0) && ((B2 != 0) && (B9 != 0))) || (((B0 == 0) && ((B3 != 0) && (B10 == 0))) || (((B0 == 0) && ((B4 != 0) && (B10 == 0))) || (((B1 != 0) && ((B2 == 0) && (B9 != 0))) || (((B1 != 0) && ((B3 == 0) && (B10 != 0))) || (((B1 != 0) && ((B4 == 0) && (B10 != 0))) || (((B1 == 0) && ((B4 != 0) && (B10 == 0))) || (((B3 != 0) && ((B5 == 0) && (B8 != 0))) || (((B3 == 0) && ((B5 != 0) && (B8 != 0))) || ((B4 != 0) && ((B5 == 0) && (B8 != 0))))))))))))))))));



process 1

	341: assume(!(((B0 == 0) && (B1 != 0)) || (((B3 == 0) && (B4 != 0)) || (((B0 != 0) && ((B2 == 0) && (B9 != 0))) || (((B0 != 0) && ((B3 == 0) && (B10 != 0))) || (((B0 != 0) && ((B4 == 0) && (B10 != 0))) || (((B0 == 0) && ((B2 != 0) && (B9 != 0))) || (((B0 == 0) && ((B3 != 0) && (B10 == 0))) || (((B0 == 0) && ((B4 != 0) && (B10 == 0))) || (((B1 != 0) && ((B2 == 0) && (B9 != 0))) || (((B1 != 0) && ((B3 == 0) && (B10 != 0))) || (((B1 != 0) && ((B4 == 0) && (B10 != 0))) || (((B1 == 0) && ((B4 != 0) && (B10 == 0))) || (((B3 != 0) && ((B5 == 0) && (B8 != 0))) || (((B3 == 0) && ((B5 != 0) && (B8 != 0))) || ((B4 != 0) && ((B5 == 0) && (B8 != 0))))))))))))))))));
	
	/* Predicate abstraction: y2_fst_1 = 0; */
	51: nop;
	
	/* Predicate abstraction: y2_cnt_1 = 0; */
	52: nop;
	
	/* Predicate abstraction: y1_fst_1 = 0; */
	53: nop;
	
	/* Predicate abstraction: y1_cnt_1 = 0; */
	54: nop;
	
	/* Predicate abstraction: y1_1_1 = 0; */
	55: nop;
	
	/* Predicate abstraction: y1_2_1 = 0; */
	56: nop;
	
	/* Predicate abstraction: y1_3_1 = 0; */
	57: nop;
	
	/* Predicate abstraction: y1_4_1 = 0; */
	58: nop;
	
	/* Predicate abstraction: y1_5_1 = 0; */
	59: nop;
	
	/* Predicate abstraction: ch2_fst_1 = 0; */
	60: nop;
	
	/* Predicate abstraction: ch2_cnt_1 = 0; */
	61: nop;
	
	/* Predicate abstraction: ch1_fst_1 = 0; */
	62: nop;
	
	/* Predicate abstraction: ch1_cnt_1 = 0; */
	63: nop;
	
	/* Predicate abstraction: ch1_1_1 = 0; */
	64: nop;
	
	/* Predicate abstraction: ch1_2_1 = 0; */
	65: nop;
	
	/* Predicate abstraction: ch1_3_1 = 0; */
	66: nop;
	
	/* Predicate abstraction: ch1_4_1 = 0; */
	67: nop;
	
	/* Predicate abstraction: ch1_5_1 = 0; */
	68: nop;
	
	/* Replacing "store ch1 = 1;" */
	1: 
	/* Predicate abstraction: ch1_fst_1 = 1; */
	69: nop;
	
	/* Replacing "load t12 = y2;" */
	2: 73: if (*) goto 72;
	
	/* Replacing "store y1 = t12 + 1;" */
	4: 
	/* Predicate abstraction: y1_fst_1 = 1; */
	80: nop;
	
	/* Replacing "store ch1 = 0;" */
	5: 84: if (*) goto 83;
	
	/* Replacing "load t13 = ch2;" */
	6: 92: if (*) goto 91;
	7: 100: if (*) goto 98;
	
	/* Replacing "load t11 = y1;" */
	10: 102: if (*) goto 101;
	
	/* Replacing "load t12 = y2;" */
	11: 144: if (*) goto 143;
	12: 153: if (*) goto 151;
	15: nop;
	
	/* Replacing "store y1 = 0;" */
	16: 155: if (*) goto 154;

process 2

	342: assume(!(((B0 == 0) && (B1 != 0)) || (((B3 == 0) && (B4 != 0)) || (((B0 != 0) && ((B2 == 0) && (B9 != 0))) || (((B0 != 0) && ((B3 == 0) && (B10 != 0))) || (((B0 != 0) && ((B4 == 0) && (B10 != 0))) || (((B0 == 0) && ((B2 != 0) && (B9 != 0))) || (((B0 == 0) && ((B3 != 0) && (B10 == 0))) || (((B0 == 0) && ((B4 != 0) && (B10 == 0))) || (((B1 != 0) && ((B2 == 0) && (B9 != 0))) || (((B1 != 0) && ((B3 == 0) && (B10 != 0))) || (((B1 != 0) && ((B4 == 0) && (B10 != 0))) || (((B1 == 0) && ((B4 != 0) && (B10 == 0))) || (((B3 != 0) && ((B5 == 0) && (B8 != 0))) || (((B3 == 0) && ((B5 != 0) && (B8 != 0))) || ((B4 != 0) && ((B5 == 0) && (B8 != 0))))))))))))))))));
	
	/* Predicate abstraction: y2_fst_2 = 0; */
	173: nop;
	
	/* Predicate abstraction: y2_cnt_2 = 0; */
	174: nop;
	
	/* Predicate abstraction: y2_1_2 = 0; */
	175: nop;
	
	/* Predicate abstraction: y2_2_2 = 0; */
	176: nop;
	
	/* Predicate abstraction: y2_3_2 = 0; */
	177: nop;
	
	/* Predicate abstraction: y2_4_2 = 0; */
	178: nop;
	
	/* Predicate abstraction: y2_5_2 = 0; */
	179: nop;
	
	/* Predicate abstraction: y1_fst_2 = 0; */
	180: nop;
	
	/* Predicate abstraction: y1_cnt_2 = 0; */
	181: nop;
	
	/* Predicate abstraction: ch2_fst_2 = 0; */
	182: nop;
	
	/* Predicate abstraction: ch2_cnt_2 = 0; */
	183: nop;
	
	/* Predicate abstraction: ch2_1_2 = 0; */
	184: nop;
	
	/* Predicate abstraction: ch2_2_2 = 0; */
	185: nop;
	
	/* Predicate abstraction: ch2_3_2 = 0; */
	186: nop;
	
	/* Predicate abstraction: ch2_4_2 = 0; */
	187: nop;
	
	/* Predicate abstraction: ch2_5_2 = 0; */
	188: nop;
	
	/* Predicate abstraction: ch1_fst_2 = 0; */
	189: nop;
	
	/* Predicate abstraction: ch1_cnt_2 = 0; */
	190: nop;
	
	/* Replacing "store ch2 = 1;" */
	1: 
	/* Predicate abstraction: ch2_fst_2 = 1; */
	191: nop;
	
	/* Replacing "load t21 = y1;" */
	2: 195: if (*) goto 194;
	
	/* Replacing "store y2 = t21 + 1;" */
	4: 
	/* Predicate abstraction: y2_fst_2 = 1; */
	202: nop;
	
	/* Replacing "store ch2 = 0;" */
	5: 206: if (*) goto 205;
	
	/* Replacing "load t23 = ch1;" */
	6: 214: if (*) goto 213;
	7: 222: if (*) goto 220;
	
	/* Replacing "load t21 = y1;" */
	10: 224: if (*) goto 223;
	
	/* Replacing "load t22 = y2;" */
	11: 232: if (*) goto 231;
	12: 275: if (*) goto 273;
	15: nop;
	
	/* Replacing "store y2 = 0;" */
	16: 277: if (*) goto 276;



assert always (pc{1} != 15);